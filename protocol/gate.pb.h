// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gate.proto

#ifndef PROTOBUF_gate_2eproto__INCLUDED
#define PROTOBUF_gate_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/map.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/service.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace gate {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_gate_2eproto();
void protobuf_AssignDesc_gate_2eproto();
void protobuf_ShutdownFile_gate_2eproto();

class BroadcastReply;
class BroadcastReq;
class BroadcastRoomReply;
class BroadcastRoomReq;
class Empty;
class Proto;
class PushMsgReply;
class PushMsgReq;
class RoomsReply;
class RoomsReq;

// ===================================================================

class Proto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gate.Proto) */ {
 public:
  Proto();
  virtual ~Proto();

  Proto(const Proto& from);

  inline Proto& operator=(const Proto& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto& default_instance();

  void Swap(Proto* other);

  // implements Message ----------------------------------------------

  inline Proto* New() const { return New(NULL); }

  Proto* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto& from);
  void MergeFrom(const Proto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Proto* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ver = 1;
  void clear_ver();
  static const int kVerFieldNumber = 1;
  ::google::protobuf::int32 ver() const;
  void set_ver(::google::protobuf::int32 value);

  // optional int32 op = 2;
  void clear_op();
  static const int kOpFieldNumber = 2;
  ::google::protobuf::int32 op() const;
  void set_op(::google::protobuf::int32 value);

  // optional int32 seq = 3;
  void clear_seq();
  static const int kSeqFieldNumber = 3;
  ::google::protobuf::int32 seq() const;
  void set_seq(::google::protobuf::int32 value);

  // optional bytes body = 4;
  void clear_body();
  static const int kBodyFieldNumber = 4;
  const ::std::string& body() const;
  void set_body(const ::std::string& value);
  void set_body(const char* value);
  void set_body(const void* value, size_t size);
  ::std::string* mutable_body();
  ::std::string* release_body();
  void set_allocated_body(::std::string* body);

  // @@protoc_insertion_point(class_scope:gate.Proto)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 ver_;
  ::google::protobuf::int32 op_;
  ::google::protobuf::internal::ArenaStringPtr body_;
  ::google::protobuf::int32 seq_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gate_2eproto();
  friend void protobuf_AssignDesc_gate_2eproto();
  friend void protobuf_ShutdownFile_gate_2eproto();

  void InitAsDefaultInstance();
  static Proto* default_instance_;
};
// -------------------------------------------------------------------

class Empty : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gate.Empty) */ {
 public:
  Empty();
  virtual ~Empty();

  Empty(const Empty& from);

  inline Empty& operator=(const Empty& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Empty& default_instance();

  void Swap(Empty* other);

  // implements Message ----------------------------------------------

  inline Empty* New() const { return New(NULL); }

  Empty* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Empty& from);
  void MergeFrom(const Empty& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Empty* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:gate.Empty)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gate_2eproto();
  friend void protobuf_AssignDesc_gate_2eproto();
  friend void protobuf_ShutdownFile_gate_2eproto();

  void InitAsDefaultInstance();
  static Empty* default_instance_;
};
// -------------------------------------------------------------------

class PushMsgReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gate.PushMsgReq) */ {
 public:
  PushMsgReq();
  virtual ~PushMsgReq();

  PushMsgReq(const PushMsgReq& from);

  inline PushMsgReq& operator=(const PushMsgReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PushMsgReq& default_instance();

  void Swap(PushMsgReq* other);

  // implements Message ----------------------------------------------

  inline PushMsgReq* New() const { return New(NULL); }

  PushMsgReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PushMsgReq& from);
  void MergeFrom(const PushMsgReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PushMsgReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string keys = 1;
  int keys_size() const;
  void clear_keys();
  static const int kKeysFieldNumber = 1;
  const ::std::string& keys(int index) const;
  ::std::string* mutable_keys(int index);
  void set_keys(int index, const ::std::string& value);
  void set_keys(int index, const char* value);
  void set_keys(int index, const char* value, size_t size);
  ::std::string* add_keys();
  void add_keys(const ::std::string& value);
  void add_keys(const char* value);
  void add_keys(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& keys() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_keys();

  // optional int32 protoOp = 3;
  void clear_protoop();
  static const int kProtoOpFieldNumber = 3;
  ::google::protobuf::int32 protoop() const;
  void set_protoop(::google::protobuf::int32 value);

  // optional .gate.Proto proto = 2;
  bool has_proto() const;
  void clear_proto();
  static const int kProtoFieldNumber = 2;
  const ::gate::Proto& proto() const;
  ::gate::Proto* mutable_proto();
  ::gate::Proto* release_proto();
  void set_allocated_proto(::gate::Proto* proto);

  // @@protoc_insertion_point(class_scope:gate.PushMsgReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::std::string> keys_;
  ::gate::Proto* proto_;
  ::google::protobuf::int32 protoop_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gate_2eproto();
  friend void protobuf_AssignDesc_gate_2eproto();
  friend void protobuf_ShutdownFile_gate_2eproto();

  void InitAsDefaultInstance();
  static PushMsgReq* default_instance_;
};
// -------------------------------------------------------------------

class PushMsgReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gate.PushMsgReply) */ {
 public:
  PushMsgReply();
  virtual ~PushMsgReply();

  PushMsgReply(const PushMsgReply& from);

  inline PushMsgReply& operator=(const PushMsgReply& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PushMsgReply& default_instance();

  void Swap(PushMsgReply* other);

  // implements Message ----------------------------------------------

  inline PushMsgReply* New() const { return New(NULL); }

  PushMsgReply* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PushMsgReply& from);
  void MergeFrom(const PushMsgReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PushMsgReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:gate.PushMsgReply)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gate_2eproto();
  friend void protobuf_AssignDesc_gate_2eproto();
  friend void protobuf_ShutdownFile_gate_2eproto();

  void InitAsDefaultInstance();
  static PushMsgReply* default_instance_;
};
// -------------------------------------------------------------------

class BroadcastReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gate.BroadcastReq) */ {
 public:
  BroadcastReq();
  virtual ~BroadcastReq();

  BroadcastReq(const BroadcastReq& from);

  inline BroadcastReq& operator=(const BroadcastReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BroadcastReq& default_instance();

  void Swap(BroadcastReq* other);

  // implements Message ----------------------------------------------

  inline BroadcastReq* New() const { return New(NULL); }

  BroadcastReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BroadcastReq& from);
  void MergeFrom(const BroadcastReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BroadcastReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 protoOp = 1;
  void clear_protoop();
  static const int kProtoOpFieldNumber = 1;
  ::google::protobuf::int32 protoop() const;
  void set_protoop(::google::protobuf::int32 value);

  // optional .gate.Proto proto = 2;
  bool has_proto() const;
  void clear_proto();
  static const int kProtoFieldNumber = 2;
  const ::gate::Proto& proto() const;
  ::gate::Proto* mutable_proto();
  ::gate::Proto* release_proto();
  void set_allocated_proto(::gate::Proto* proto);

  // optional int32 speed = 3;
  void clear_speed();
  static const int kSpeedFieldNumber = 3;
  ::google::protobuf::int32 speed() const;
  void set_speed(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gate.BroadcastReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::gate::Proto* proto_;
  ::google::protobuf::int32 protoop_;
  ::google::protobuf::int32 speed_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gate_2eproto();
  friend void protobuf_AssignDesc_gate_2eproto();
  friend void protobuf_ShutdownFile_gate_2eproto();

  void InitAsDefaultInstance();
  static BroadcastReq* default_instance_;
};
// -------------------------------------------------------------------

class BroadcastReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gate.BroadcastReply) */ {
 public:
  BroadcastReply();
  virtual ~BroadcastReply();

  BroadcastReply(const BroadcastReply& from);

  inline BroadcastReply& operator=(const BroadcastReply& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BroadcastReply& default_instance();

  void Swap(BroadcastReply* other);

  // implements Message ----------------------------------------------

  inline BroadcastReply* New() const { return New(NULL); }

  BroadcastReply* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BroadcastReply& from);
  void MergeFrom(const BroadcastReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BroadcastReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:gate.BroadcastReply)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gate_2eproto();
  friend void protobuf_AssignDesc_gate_2eproto();
  friend void protobuf_ShutdownFile_gate_2eproto();

  void InitAsDefaultInstance();
  static BroadcastReply* default_instance_;
};
// -------------------------------------------------------------------

class BroadcastRoomReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gate.BroadcastRoomReq) */ {
 public:
  BroadcastRoomReq();
  virtual ~BroadcastRoomReq();

  BroadcastRoomReq(const BroadcastRoomReq& from);

  inline BroadcastRoomReq& operator=(const BroadcastRoomReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BroadcastRoomReq& default_instance();

  void Swap(BroadcastRoomReq* other);

  // implements Message ----------------------------------------------

  inline BroadcastRoomReq* New() const { return New(NULL); }

  BroadcastRoomReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BroadcastRoomReq& from);
  void MergeFrom(const BroadcastRoomReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BroadcastRoomReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string roomID = 1;
  void clear_roomid();
  static const int kRoomIDFieldNumber = 1;
  const ::std::string& roomid() const;
  void set_roomid(const ::std::string& value);
  void set_roomid(const char* value);
  void set_roomid(const char* value, size_t size);
  ::std::string* mutable_roomid();
  ::std::string* release_roomid();
  void set_allocated_roomid(::std::string* roomid);

  // optional .gate.Proto proto = 2;
  bool has_proto() const;
  void clear_proto();
  static const int kProtoFieldNumber = 2;
  const ::gate::Proto& proto() const;
  ::gate::Proto* mutable_proto();
  ::gate::Proto* release_proto();
  void set_allocated_proto(::gate::Proto* proto);

  // @@protoc_insertion_point(class_scope:gate.BroadcastRoomReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr roomid_;
  ::gate::Proto* proto_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gate_2eproto();
  friend void protobuf_AssignDesc_gate_2eproto();
  friend void protobuf_ShutdownFile_gate_2eproto();

  void InitAsDefaultInstance();
  static BroadcastRoomReq* default_instance_;
};
// -------------------------------------------------------------------

class BroadcastRoomReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gate.BroadcastRoomReply) */ {
 public:
  BroadcastRoomReply();
  virtual ~BroadcastRoomReply();

  BroadcastRoomReply(const BroadcastRoomReply& from);

  inline BroadcastRoomReply& operator=(const BroadcastRoomReply& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BroadcastRoomReply& default_instance();

  void Swap(BroadcastRoomReply* other);

  // implements Message ----------------------------------------------

  inline BroadcastRoomReply* New() const { return New(NULL); }

  BroadcastRoomReply* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BroadcastRoomReply& from);
  void MergeFrom(const BroadcastRoomReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BroadcastRoomReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:gate.BroadcastRoomReply)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gate_2eproto();
  friend void protobuf_AssignDesc_gate_2eproto();
  friend void protobuf_ShutdownFile_gate_2eproto();

  void InitAsDefaultInstance();
  static BroadcastRoomReply* default_instance_;
};
// -------------------------------------------------------------------

class RoomsReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gate.RoomsReq) */ {
 public:
  RoomsReq();
  virtual ~RoomsReq();

  RoomsReq(const RoomsReq& from);

  inline RoomsReq& operator=(const RoomsReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoomsReq& default_instance();

  void Swap(RoomsReq* other);

  // implements Message ----------------------------------------------

  inline RoomsReq* New() const { return New(NULL); }

  RoomsReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoomsReq& from);
  void MergeFrom(const RoomsReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RoomsReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:gate.RoomsReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gate_2eproto();
  friend void protobuf_AssignDesc_gate_2eproto();
  friend void protobuf_ShutdownFile_gate_2eproto();

  void InitAsDefaultInstance();
  static RoomsReq* default_instance_;
};
// -------------------------------------------------------------------

class RoomsReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gate.RoomsReply) */ {
 public:
  RoomsReply();
  virtual ~RoomsReply();

  RoomsReply(const RoomsReply& from);

  inline RoomsReply& operator=(const RoomsReply& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoomsReply& default_instance();

  void Swap(RoomsReply* other);

  // implements Message ----------------------------------------------

  inline RoomsReply* New() const { return New(NULL); }

  RoomsReply* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoomsReply& from);
  void MergeFrom(const RoomsReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RoomsReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, bool> rooms = 1;
  int rooms_size() const;
  void clear_rooms();
  static const int kRoomsFieldNumber = 1;
  const ::google::protobuf::Map< ::std::string, bool >&
      rooms() const;
  ::google::protobuf::Map< ::std::string, bool >*
      mutable_rooms();

  // @@protoc_insertion_point(class_scope:gate.RoomsReply)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::std::string, bool,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_BOOL,
      0 >
      RoomsReply_RoomsEntry;
  ::google::protobuf::internal::MapField<
      ::std::string, bool,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_BOOL,
      0 > rooms_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gate_2eproto();
  friend void protobuf_AssignDesc_gate_2eproto();
  friend void protobuf_ShutdownFile_gate_2eproto();

  void InitAsDefaultInstance();
  static RoomsReply* default_instance_;
};
// ===================================================================

class Gate_Stub;

class Gate : public ::google::protobuf::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline Gate() {};
 public:
  virtual ~Gate();

  typedef Gate_Stub Stub;

  static const ::google::protobuf::ServiceDescriptor* descriptor();

  virtual void Ping(::google::protobuf::RpcController* controller,
                       const ::gate::Empty* request,
                       ::gate::Empty* response,
                       ::google::protobuf::Closure* done);
  virtual void Close(::google::protobuf::RpcController* controller,
                       const ::gate::Empty* request,
                       ::gate::Empty* response,
                       ::google::protobuf::Closure* done);
  virtual void PushMsg(::google::protobuf::RpcController* controller,
                       const ::gate::PushMsgReq* request,
                       ::gate::PushMsgReply* response,
                       ::google::protobuf::Closure* done);
  virtual void Broadcast(::google::protobuf::RpcController* controller,
                       const ::gate::BroadcastReq* request,
                       ::gate::BroadcastReply* response,
                       ::google::protobuf::Closure* done);
  virtual void BroadcastRoom(::google::protobuf::RpcController* controller,
                       const ::gate::BroadcastRoomReq* request,
                       ::gate::BroadcastRoomReply* response,
                       ::google::protobuf::Closure* done);
  virtual void Rooms(::google::protobuf::RpcController* controller,
                       const ::gate::RoomsReq* request,
                       ::gate::RoomsReply* response,
                       ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------

  const ::google::protobuf::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::google::protobuf::MethodDescriptor* method,
                  ::google::protobuf::RpcController* controller,
                  const ::google::protobuf::Message* request,
                  ::google::protobuf::Message* response,
                  ::google::protobuf::Closure* done);
  const ::google::protobuf::Message& GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const;
  const ::google::protobuf::Message& GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(Gate);
};

class Gate_Stub : public Gate {
 public:
  Gate_Stub(::google::protobuf::RpcChannel* channel);
  Gate_Stub(::google::protobuf::RpcChannel* channel,
                   ::google::protobuf::Service::ChannelOwnership ownership);
  ~Gate_Stub();

  inline ::google::protobuf::RpcChannel* channel() { return channel_; }

  // implements Gate ------------------------------------------

  void Ping(::google::protobuf::RpcController* controller,
                       const ::gate::Empty* request,
                       ::gate::Empty* response,
                       ::google::protobuf::Closure* done);
  void Close(::google::protobuf::RpcController* controller,
                       const ::gate::Empty* request,
                       ::gate::Empty* response,
                       ::google::protobuf::Closure* done);
  void PushMsg(::google::protobuf::RpcController* controller,
                       const ::gate::PushMsgReq* request,
                       ::gate::PushMsgReply* response,
                       ::google::protobuf::Closure* done);
  void Broadcast(::google::protobuf::RpcController* controller,
                       const ::gate::BroadcastReq* request,
                       ::gate::BroadcastReply* response,
                       ::google::protobuf::Closure* done);
  void BroadcastRoom(::google::protobuf::RpcController* controller,
                       const ::gate::BroadcastRoomReq* request,
                       ::gate::BroadcastRoomReply* response,
                       ::google::protobuf::Closure* done);
  void Rooms(::google::protobuf::RpcController* controller,
                       const ::gate::RoomsReq* request,
                       ::gate::RoomsReply* response,
                       ::google::protobuf::Closure* done);
 private:
  ::google::protobuf::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(Gate_Stub);
};


// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Proto

// optional int32 ver = 1;
inline void Proto::clear_ver() {
  ver_ = 0;
}
inline ::google::protobuf::int32 Proto::ver() const {
  // @@protoc_insertion_point(field_get:gate.Proto.ver)
  return ver_;
}
inline void Proto::set_ver(::google::protobuf::int32 value) {
  
  ver_ = value;
  // @@protoc_insertion_point(field_set:gate.Proto.ver)
}

// optional int32 op = 2;
inline void Proto::clear_op() {
  op_ = 0;
}
inline ::google::protobuf::int32 Proto::op() const {
  // @@protoc_insertion_point(field_get:gate.Proto.op)
  return op_;
}
inline void Proto::set_op(::google::protobuf::int32 value) {
  
  op_ = value;
  // @@protoc_insertion_point(field_set:gate.Proto.op)
}

// optional int32 seq = 3;
inline void Proto::clear_seq() {
  seq_ = 0;
}
inline ::google::protobuf::int32 Proto::seq() const {
  // @@protoc_insertion_point(field_get:gate.Proto.seq)
  return seq_;
}
inline void Proto::set_seq(::google::protobuf::int32 value) {
  
  seq_ = value;
  // @@protoc_insertion_point(field_set:gate.Proto.seq)
}

// optional bytes body = 4;
inline void Proto::clear_body() {
  body_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Proto::body() const {
  // @@protoc_insertion_point(field_get:gate.Proto.body)
  return body_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Proto::set_body(const ::std::string& value) {
  
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gate.Proto.body)
}
inline void Proto::set_body(const char* value) {
  
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gate.Proto.body)
}
inline void Proto::set_body(const void* value, size_t size) {
  
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gate.Proto.body)
}
inline ::std::string* Proto::mutable_body() {
  
  // @@protoc_insertion_point(field_mutable:gate.Proto.body)
  return body_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Proto::release_body() {
  // @@protoc_insertion_point(field_release:gate.Proto.body)
  
  return body_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Proto::set_allocated_body(::std::string* body) {
  if (body != NULL) {
    
  } else {
    
  }
  body_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), body);
  // @@protoc_insertion_point(field_set_allocated:gate.Proto.body)
}

// -------------------------------------------------------------------

// Empty

// -------------------------------------------------------------------

// PushMsgReq

// repeated string keys = 1;
inline int PushMsgReq::keys_size() const {
  return keys_.size();
}
inline void PushMsgReq::clear_keys() {
  keys_.Clear();
}
inline const ::std::string& PushMsgReq::keys(int index) const {
  // @@protoc_insertion_point(field_get:gate.PushMsgReq.keys)
  return keys_.Get(index);
}
inline ::std::string* PushMsgReq::mutable_keys(int index) {
  // @@protoc_insertion_point(field_mutable:gate.PushMsgReq.keys)
  return keys_.Mutable(index);
}
inline void PushMsgReq::set_keys(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:gate.PushMsgReq.keys)
  keys_.Mutable(index)->assign(value);
}
inline void PushMsgReq::set_keys(int index, const char* value) {
  keys_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:gate.PushMsgReq.keys)
}
inline void PushMsgReq::set_keys(int index, const char* value, size_t size) {
  keys_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:gate.PushMsgReq.keys)
}
inline ::std::string* PushMsgReq::add_keys() {
  // @@protoc_insertion_point(field_add_mutable:gate.PushMsgReq.keys)
  return keys_.Add();
}
inline void PushMsgReq::add_keys(const ::std::string& value) {
  keys_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:gate.PushMsgReq.keys)
}
inline void PushMsgReq::add_keys(const char* value) {
  keys_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:gate.PushMsgReq.keys)
}
inline void PushMsgReq::add_keys(const char* value, size_t size) {
  keys_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:gate.PushMsgReq.keys)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
PushMsgReq::keys() const {
  // @@protoc_insertion_point(field_list:gate.PushMsgReq.keys)
  return keys_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
PushMsgReq::mutable_keys() {
  // @@protoc_insertion_point(field_mutable_list:gate.PushMsgReq.keys)
  return &keys_;
}

// optional int32 protoOp = 3;
inline void PushMsgReq::clear_protoop() {
  protoop_ = 0;
}
inline ::google::protobuf::int32 PushMsgReq::protoop() const {
  // @@protoc_insertion_point(field_get:gate.PushMsgReq.protoOp)
  return protoop_;
}
inline void PushMsgReq::set_protoop(::google::protobuf::int32 value) {
  
  protoop_ = value;
  // @@protoc_insertion_point(field_set:gate.PushMsgReq.protoOp)
}

// optional .gate.Proto proto = 2;
inline bool PushMsgReq::has_proto() const {
  return !_is_default_instance_ && proto_ != NULL;
}
inline void PushMsgReq::clear_proto() {
  if (GetArenaNoVirtual() == NULL && proto_ != NULL) delete proto_;
  proto_ = NULL;
}
inline const ::gate::Proto& PushMsgReq::proto() const {
  // @@protoc_insertion_point(field_get:gate.PushMsgReq.proto)
  return proto_ != NULL ? *proto_ : *default_instance_->proto_;
}
inline ::gate::Proto* PushMsgReq::mutable_proto() {
  
  if (proto_ == NULL) {
    proto_ = new ::gate::Proto;
  }
  // @@protoc_insertion_point(field_mutable:gate.PushMsgReq.proto)
  return proto_;
}
inline ::gate::Proto* PushMsgReq::release_proto() {
  // @@protoc_insertion_point(field_release:gate.PushMsgReq.proto)
  
  ::gate::Proto* temp = proto_;
  proto_ = NULL;
  return temp;
}
inline void PushMsgReq::set_allocated_proto(::gate::Proto* proto) {
  delete proto_;
  proto_ = proto;
  if (proto) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gate.PushMsgReq.proto)
}

// -------------------------------------------------------------------

// PushMsgReply

// -------------------------------------------------------------------

// BroadcastReq

// optional int32 protoOp = 1;
inline void BroadcastReq::clear_protoop() {
  protoop_ = 0;
}
inline ::google::protobuf::int32 BroadcastReq::protoop() const {
  // @@protoc_insertion_point(field_get:gate.BroadcastReq.protoOp)
  return protoop_;
}
inline void BroadcastReq::set_protoop(::google::protobuf::int32 value) {
  
  protoop_ = value;
  // @@protoc_insertion_point(field_set:gate.BroadcastReq.protoOp)
}

// optional .gate.Proto proto = 2;
inline bool BroadcastReq::has_proto() const {
  return !_is_default_instance_ && proto_ != NULL;
}
inline void BroadcastReq::clear_proto() {
  if (GetArenaNoVirtual() == NULL && proto_ != NULL) delete proto_;
  proto_ = NULL;
}
inline const ::gate::Proto& BroadcastReq::proto() const {
  // @@protoc_insertion_point(field_get:gate.BroadcastReq.proto)
  return proto_ != NULL ? *proto_ : *default_instance_->proto_;
}
inline ::gate::Proto* BroadcastReq::mutable_proto() {
  
  if (proto_ == NULL) {
    proto_ = new ::gate::Proto;
  }
  // @@protoc_insertion_point(field_mutable:gate.BroadcastReq.proto)
  return proto_;
}
inline ::gate::Proto* BroadcastReq::release_proto() {
  // @@protoc_insertion_point(field_release:gate.BroadcastReq.proto)
  
  ::gate::Proto* temp = proto_;
  proto_ = NULL;
  return temp;
}
inline void BroadcastReq::set_allocated_proto(::gate::Proto* proto) {
  delete proto_;
  proto_ = proto;
  if (proto) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gate.BroadcastReq.proto)
}

// optional int32 speed = 3;
inline void BroadcastReq::clear_speed() {
  speed_ = 0;
}
inline ::google::protobuf::int32 BroadcastReq::speed() const {
  // @@protoc_insertion_point(field_get:gate.BroadcastReq.speed)
  return speed_;
}
inline void BroadcastReq::set_speed(::google::protobuf::int32 value) {
  
  speed_ = value;
  // @@protoc_insertion_point(field_set:gate.BroadcastReq.speed)
}

// -------------------------------------------------------------------

// BroadcastReply

// -------------------------------------------------------------------

// BroadcastRoomReq

// optional string roomID = 1;
inline void BroadcastRoomReq::clear_roomid() {
  roomid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BroadcastRoomReq::roomid() const {
  // @@protoc_insertion_point(field_get:gate.BroadcastRoomReq.roomID)
  return roomid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BroadcastRoomReq::set_roomid(const ::std::string& value) {
  
  roomid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gate.BroadcastRoomReq.roomID)
}
inline void BroadcastRoomReq::set_roomid(const char* value) {
  
  roomid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gate.BroadcastRoomReq.roomID)
}
inline void BroadcastRoomReq::set_roomid(const char* value, size_t size) {
  
  roomid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gate.BroadcastRoomReq.roomID)
}
inline ::std::string* BroadcastRoomReq::mutable_roomid() {
  
  // @@protoc_insertion_point(field_mutable:gate.BroadcastRoomReq.roomID)
  return roomid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BroadcastRoomReq::release_roomid() {
  // @@protoc_insertion_point(field_release:gate.BroadcastRoomReq.roomID)
  
  return roomid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BroadcastRoomReq::set_allocated_roomid(::std::string* roomid) {
  if (roomid != NULL) {
    
  } else {
    
  }
  roomid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), roomid);
  // @@protoc_insertion_point(field_set_allocated:gate.BroadcastRoomReq.roomID)
}

// optional .gate.Proto proto = 2;
inline bool BroadcastRoomReq::has_proto() const {
  return !_is_default_instance_ && proto_ != NULL;
}
inline void BroadcastRoomReq::clear_proto() {
  if (GetArenaNoVirtual() == NULL && proto_ != NULL) delete proto_;
  proto_ = NULL;
}
inline const ::gate::Proto& BroadcastRoomReq::proto() const {
  // @@protoc_insertion_point(field_get:gate.BroadcastRoomReq.proto)
  return proto_ != NULL ? *proto_ : *default_instance_->proto_;
}
inline ::gate::Proto* BroadcastRoomReq::mutable_proto() {
  
  if (proto_ == NULL) {
    proto_ = new ::gate::Proto;
  }
  // @@protoc_insertion_point(field_mutable:gate.BroadcastRoomReq.proto)
  return proto_;
}
inline ::gate::Proto* BroadcastRoomReq::release_proto() {
  // @@protoc_insertion_point(field_release:gate.BroadcastRoomReq.proto)
  
  ::gate::Proto* temp = proto_;
  proto_ = NULL;
  return temp;
}
inline void BroadcastRoomReq::set_allocated_proto(::gate::Proto* proto) {
  delete proto_;
  proto_ = proto;
  if (proto) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gate.BroadcastRoomReq.proto)
}

// -------------------------------------------------------------------

// BroadcastRoomReply

// -------------------------------------------------------------------

// RoomsReq

// -------------------------------------------------------------------

// RoomsReply

// map<string, bool> rooms = 1;
inline int RoomsReply::rooms_size() const {
  return rooms_.size();
}
inline void RoomsReply::clear_rooms() {
  rooms_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, bool >&
RoomsReply::rooms() const {
  // @@protoc_insertion_point(field_map:gate.RoomsReply.rooms)
  return rooms_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, bool >*
RoomsReply::mutable_rooms() {
  // @@protoc_insertion_point(field_mutable_map:gate.RoomsReply.rooms)
  return rooms_.MutableMap();
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace gate

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_gate_2eproto__INCLUDED
